#!/bin/bash
# Created by Kai Pazdzewicz
# Reworked a old script 19.05.2018

# VARS
CPUINFO="/proc/cpuinfo"
RAMINFO="/proc/meminfo"
LOAD="/proc/loadavg"
DF="$(which df)"
IP="$(which ip)"
SCREEN="$(which screen)"
MDADM="$(which mdadm)"
MYSQL="$(which mysql)"
BIRDC="$(which birdc)"
BIRDC6="$(which birdc6)"
VARNISHADM="$(which varnishadm)"
QM="$(which qm)"

# FUNCTIONS
function cpuinfo {
  MANUFACTURER=$(cat "$CPUINFO" | grep "model name" | uniq | cut -d':' -f2 | cut -d'@' -f1 | xargs)
  CORES=$(cat "$CPUINFO" | awk '/processor/' | wc -l)
  SPEED=$(cat "$CPUINFO" | awk '/cpu MHz/' | cut -d':' -f2 | uniq | xargs | awk '{print int($1)}')
  LOAD=$(cat "$LOAD" | awk '{ print $1,$2,$3}')
  echo -e "===\tCPU INFO\t==="
  echo "$MANUFACTURER ($CORES x $SPEED MHz)"
  echo "Load: $LOAD"
}
# RAM Infos
function raminfo {
  TOTALRAM=$(cat "$RAMINFO" | awk '/MemTotal/ {print int($2/1024)}')
  FREERAM=$(cat "$RAMINFO" | awk '/MemFree/ {print int($2/1024)}')
  USEDRAM=$(expr $TOTALRAM - $FREERAM)
  echo -e "\n===\tRAM INFO\t==="
  echo -e "$USEDRAM MB / $TOTALRAM MB"
}
function ipinfo {
  IPS=$(ip -o addr | grep -v "127.0.0.1" | grep -v "::1/128" | grep -v "fe80::" | awk '{printf "%s\t\t\t%s\n",$2,$4}')
  echo -e "\n===\tIPs INFO\t==="
  echo "IP Adressen:"
  echo "$IPS"
}
function partinfo {
  echo -e "\n===\tHDD INFO\t==="
  for MOUNT in $($DF| awk '{if (NR!=1) {print $6}}')
  do
    USED=$($DF -h | grep "$MOUNT$" | awk '{print $3}')
    TOTAL=$($DF -h | grep "$MOUNT$" | awk '{print $2}')
    PERC=$($DF | grep "$MOUNT$" | awk '{print $5}' | cut -d'%' -f1)
    if [ "$PERC" -gt "80" ]
    then
      if [ "$PERC" -gt "90" ]
      then
        echo -e "$USED\t/ $TOTAL\t\e[31m$PERC%\e[0m\t\e[1m$MOUNT\e[0m"
      else
        echo -e "$USED\t/ $TOTAL\t\e[33m$PERC%\e[0m\t\e[1m$MOUNT\e[0m"
      fi
    else
      echo -e "$USED\t/ $TOTAL\t\e[32m$PERC%\e[0m\t\e[1m$MOUNT\e[0m"
    fi
  done
}
function raidinfo {
  echo -e "\n===\tRAID INFO\t==="
  for MDEV in $($MDADM --examine --brief --scan  --config=partitions | awk '{print $2}')
  do
    RAIDSTATUS="$($MDADM --detail $MDEV | awk '$1 ~ /State/' | cut -d':' -f2 | xargs)"
    TYPE="$($MDADM --detail $MDEV | grep "Raid Level" | cut -d':' -f2 | xargs)"
    if [[ "$RAIDSTATUS" == *"degraded"* ]]
    then
      FAULTY="$(mdadm --detail $MDEV | awk '/faulty/ {printf("%s (%s)", $6,$5)}')"
      echo -e "\e[31m$MDEV ($TYPE) - $RAIDSTATUS: $FAULTY\e[0m"
    else
      echo -e "\e[32m$MDEV ($TYPE) - $RAIDSTATUS\e[0m"
    fi
  done
}
function proxmox {
  QM="$(which qm)"
  echo -e "\n===\tPROXMOX\t==="
  for VM in $($QM list | awk '{if (NR!=1) {print $1}}')
  do
    NAME="$($QM config $VM | awk '/name:/ {print $2}')"
    STATUS="$($QM status $VM | awk '{print $2}')"
    if [ "$STATUS" == "running" ]
    then
      echo -e "\e[32m$VM $NAME ($STATUS)\e[0m"
    else
      echo -e "\e[31m$VM $NAME ($STATUS)\e[0m"
    fi
  done
}
function screeninfo {
  SCREENINFO=$(screen -ls | grep "[0-9]." | grep -v "Socket" | wc -l)
}
function mysqlinfo {
  MYSQLINFO=$(mysql -u root -e "show databases;" | grep -v "Database" | wc -l)
}
function bgpinfo {
  BGPINFO=$(echo "IPv4:" && birdc sh p | grep "BGP" && echo "IPv6:" && birdc6 sh p | grep "BGP")
}


# MAIN ROUTINE
cpuinfo
raminfo
ipinfo
partinfo
if [ -n "$MDADM" ]
then
  raidinfo
fi
if [ -n "$QM" ]
then
  proxmox
fi
echo -e "\n===\tMisc INFO\t==="
screeninfo
echo -e "Screen Sessions:\t$SCREENINFO"
if [ -x "$(command -v mysqld)" ];
then
  mysqlinfo
  echo -e "Datenbanken:\t$MYSQLINFO"
fi
if [ -x "$(command -v birdc)" ];
then
  bgpinfo
  echo -e "BGP Peers:\n$BGPINFO"
fi
